<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	@subject	 : 従業員情報に関する処理を行うSQLマッパー
	@description : 従業員情報に関する処理を行うSQLマッパー
	@author		 : 開発チーム
	@since 		 : #!CREATE_DATE!#
	@modification
	===========================================================
	DATE              AUTHOR             NOTE
	===========================================================
	#!CREATE_DATE!#		サンプル開発チーム			最初に作成
 -->
<mapper namespace="#!PACKAGE_NM!#.emp">

	<insert id="insertEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員情報を登録処理する。 -->
        INSERT INTO EMP /* QueryID : #!PACKAGE_NM!#.emp.insertEmp */
        ( 
        EMPNO
        <if test="ename    != null"> , ENAME    </if>   
        <if test="job      != null"> , JOB      </if>     
        <if test="mgr      != null"> , MGR      </if>     
        <if test="hiredate != null"> , HIREDATE </if>
        <if test="sal      != null"> , SAL      </if>     
        <if test="comm     != null"> , COMM     </if>    
        <if test="deptno   != null"> , DEPTNO   </if>  
        <if test="account   != null"> , ACCOUNT   </if>  
        )
        VALUES  
        ( 
         #{empno}   
        <if test="ename    != null"> , #{ename}    </if>   
        <if test="job      != null"> , #{job}      </if>     
        <if test="mgr      != null"> , #{mgr}      </if>     
        <if test="hiredate != null"> , STR_TO_DATE( #{hiredate} , '%Y-%m-%d %H:%i:%s') </if>
        <if test="sal      != null"> , #{sal}      </if>     
        <if test="comm     != null"> , #{comm}     </if>    
        <if test="deptno   != null"> , #{deptno}   </if>  
        <if test="account  != null"> , #{account,jdbcType=CLOB}   </if>  
        )          
	</insert>	
	
	<update id="updateEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員情報を更新処理する。 -->
        UPDATE EMP    /* QueryID : #!PACKAGE_NM!#.emp.updateEmp */      
      	  <trim prefix="SET" prefixOverrides=",">             
             <if test="empno    != null">, EMPNO    =  #{empno}    </if>
             <if test="ename    != null">, ENAME    =  #{ename}    </if>   
             <if test="job      != null">, JOB      =  #{job}      </if>     
             <if test="mgr      != null">, MGR      =  #{mgr}      </if>     
             <if test="hiredate != null">, HIREDATE =  STR_TO_DATE( #{hiredate} , '%Y-%m-%d %H:%i:%s') </if>
             <if test="sal      != null">, SAL      =  #{sal}      </if>     
             <if test="comm     != null">, COMM     =  #{comm}     </if>    
             <if test="deptno   != null">, DEPTNO   =  #{deptno}   </if>
             <if test="account   != null">, ACCOUNT   =  #{account,jdbcType=CLOB}   </if>
         </trim>          
        WHERE   EMPNO = #{empno}
	</update>
	
	<delete id="deleteEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員情報を削除処理する。 -->
		<![CDATA[
        DELETE FROM EMP   /* QueryID : #!PACKAGE_NM!#.emp.deleteEmp */  
        WHERE   EMPNO = #{empno}    
		]]>
	</delete>
	
	<select id="selectEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo" resultType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員情報を詳細に照会する。 -->
		<![CDATA[
        SELECT   /* QueryID : #!PACKAGE_NM!#.emp.selectEmp */  
              EMPNO, ENAME , JOB, MGR, DATE_FORMAT( HIREDATE , '%Y-%m-%d') HIREDATE
            , SAL, COMM, DEPTNO, ACCOUNT
            , (SELECT DNAME FROM DEPT WHERE DEPTNO = E.DEPTNO) DNAME
            , (SELECT ENAME FROM EMP WHERE EMPNO=E.MGR) MGRNAME
        FROM EMP E
        WHERE EMPNO = #{empno}  
		]]>
	</select>
		
	<select id="selectListEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo" resultType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員情報のリストを照会する。 -->
	       SELECT    /* QueryID : #!PACKAGE_NM!#.emp.selectListEmp */  
				  EMPNO, ENAME AS ENAME, JOB, MGR, DATE_FORMAT( HIREDATE , '%Y-%m-%d') HIREDATE
	            , SAL, COMM, DEPTNO, ACCOUNT
	            , (SELECT DNAME FROM DEPT WHERE DEPTNO = A.DEPTNO) DNAME
	            , (SELECT ENAME FROM EMP WHERE EMPNO=A.MGR) MGRNAME
		FROM (
			SELECT  S.*, CEIL( (@ROWNUM:=@ROWNUM+1) / #{pageSize} ) AS PAGE
			FROM (				
				SELECT 
					*  		                  
				FROM EMP
				WHERE  1=1    		
					<if test="!( scEname == null  or scEname == ''  )">
						AND ENAME LIKE CONCAT('%',#{scEname},'%')
					</if>		     
					<if test="!( scDname == null  or scDname == '' )">
						AND DEPTNO IN (SELECT DEPTNO FROM DEPT WHERE DNAME LIKE CONCAT('%',#{scDname},'%'))      
					</if>					
					<if test="!( scDeptno == null or scDeptno == ''  or scDeptno == 'all' )">
						AND DEPTNO = #{scDeptno}      
					</if>	
					<if test="!( scJob == null or scJob == '' or scJob == 'all' )">
						AND JOB = #{scJob}      
					</if>					
				ORDER BY EMPNO ASC																		
			) S, (SELECT @ROWNUM := 0) TMP
		 ) A
		WHERE PAGE = #{pageIndex}
	</select>	
	
	<select id="selectListCountEmp" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo" resultType="long">
		<!-- 従業員情報リストの件数を取得する -->
		SELECT    /* QueryID : #!PACKAGE_NM!#.emp.selectListCountEmp */
			COUNT(*) totcnt  		                  
		FROM EMP
		WHERE  1=1    		
			<if test="!( scEname == null  or scEname == ''  )">
				AND ENAME LIKE CONCAT('%',#{scEname},'%')
			</if>		     
			<if test="!( scDname == null  or scDname == '' )">
				AND DEPTNO IN (SELECT DEPTNO FROM DEPT WHERE DNAME LIKE CONCAT('%',#{scDname},'%'))      
			</if>					
			<if test="!( scDeptno == null or scDeptno == ''  or scDeptno == 'all' )">
				AND DEPTNO = #{scDeptno}      
			</if>	
			<if test="!( scJob == null or scJob == '' or scJob == 'all' )">
				AND JOB = #{scJob}      
			</if>						
	</select>

	<select id="selectListDept" parameterType="java.util.HashMap" resultType="#!PACKAGE_NM!#.emp.vo.DeptVo">
		<!-- 部門情報リストを取得する -->
		SELECT   /* QueryID : #!PACKAGE_NM!#.emp.selectListDept */
			DEPTNO AS deptno , DNAME AS dname
		FROM DEPT 
		ORDER BY DNAME ASC
	</select>
	
	<insert id="insertEmpFile" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員添付ファイル情報を登録する -->
		INSERT INTO EMP_FILE  /* QueryID : insertEmpFile */
		( 
			EMPNO          	       
			<if test="fileName    != null"> , FILE_NAME </if>
			<if test="fileData    != null"> , FILE_DATA </if>
		)
		VALUES  
		( 
			#{empno}  	        
			<if test="fileName    != null"> , #{fileName}             </if>
			<if test="fileData    != null"> , #{fileData,jdbcType=BLOB} </if>
		)          
	</insert>	
	
	<update id="updateEmpFile" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員添付ファイル情報を更新する -->
		UPDATE EMP       /* QueryID : #!PACKAGE_NM!#.emp.updateEmpFile */    
		SET    
			EMPNO = #{empno}
			<if test="fileName    != null">, FILE_NAME=  #{fileName}       </if>
			<if test="fileData    != null">, FILE_DATA=  #{fileData,jdbcType=BLOB} </if>
		WHERE   EMPNO = #{empno}
	</update>
		
	<delete id="deleteEmpFile" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員添付ファイル情報を削除する -->
		<![CDATA[
		DELETE FROM EMP_FILE  /* QueryID : #!PACKAGE_NM!#.emp.deleteEmpFile */    
		WHERE   EMPNO = #{empno}   
		]]>
	</delete>
	
	<select id="selectEmpFile" parameterType="#!PACKAGE_NM!#.emp.vo.EmpVo" resultType="#!PACKAGE_NM!#.emp.vo.EmpVo">
		<!-- 従業員添付ファイル情報を詳細取得する -->
		<![CDATA[
		SELECT   /* QueryID : #!PACKAGE_NM!#.emp.selectEmpFile */ 
			EMPNO, FILE_NAME AS fileName , FILE_DATA AS fileData
		FROM EMP_FILE
		WHERE   EMPNO = #{empno}   
		]]>
	</select>
	
</mapper>